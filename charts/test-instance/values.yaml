replicaCount: 1
image:
  repository: dimozone/test-instance
  pullPolicy: IfNotPresent
  tag: ca635e5
imagePullSecrets: []
nameOverride: ''
fullnameOverride: ''
serviceAccount:
  create: true
  annotations: {}
  name: ''
podAnnotations: {}
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1001
securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - all
cronJob:
  enabled: false
  schedule: 0 0 * * 0
env:
  MON_PORT: 8888
  GRPC_PORT: 8086
  AWS_REGION: us-east-2
service:
  type: ClusterIP
  ports:
    mon-http:
      port: 8888
      targetPort: mon-http
      protocol: TCP
    grpc:
      port: 8086
      targetPort: grpc
      protocol: TCP
ports:
  - name: mon-http
    containerPort: 8888
    protocol: TCP
  - name: grpc
    containerPort: 8086
    protocol: TCP
ingress:
  enabled: false
  className: nginx
  annotations:
    nginx.ingress.kubernetes.io/auth-tls-secret: ingress/cf-origin-ca
    nginx.ingress.kubernetes.io/auth-tls-verify-client: 'on'
    nginx.ingress.kubernetes.io/enable-cors: 'true'
    nginx.ingress.kubernetes.io/cors-allow-origin: https://app.dev.dimo.zone
    nginx.ingress.kubernetes.io/limit-rps: '3'
    external-dns.alpha.kubernetes.io/hostname: test-instance.dev.dimo.zone
  hosts:
    - host: test-instance.dev.dimo.zone
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
resources:
  limits:
    cpu: 250m
    memory: 384Mi
  requests:
    cpu: 100m
    memory: 192Mi
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
nodeSelector: {}
tolerations: []
affinity: {}
podDisruptionBudget:
  minAvailable: 0
kafka:
  clusterName: kafka-dev-dimo-kafka
  topics: []
serviceMonitor:
  enabled: true
  path: /metrics
  port: mon-http
  interval: 30s
